{"version":3,"file":"index.umd.js","sources":["../src/context.tsx","../src/ColumnDate.tsx","../src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport {CheckCalendarContext} from \"./types\";\n\nexport const defaultContext: CheckCalendarContext = {\n  locale: 'en'\n};\n\nconst CheckContext = React.createContext<CheckCalendarContext>(defaultContext);\n\nexport default CheckContext;\n","import * as React from 'react';\nimport Moment from \"react-moment\";\nimport * as moment from \"moment\";\nimport CheckContext from \"./context\";\n\nimport './styles.module.css';\n\ninterface Props {\n  date: moment.Moment;\n}\n\nconst ColumnDate: React.FC<Props> = ({ date }) => {\n  const { locale } = React.useContext(CheckContext);\n  return (\n    <div>\n      <div>\n        <Moment\n          className=\"check-calendar__day-number\"\n          locale={locale}\n          format=\"ddd\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar_day\"\n          locale=\"fr\"\n          format=\"DD\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar__month\"\n          locale=\"fr\"\n          format=\"MMM\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div\n        // class=\"d-optionDetails\"\n      />\n    </div>\n  );\n}\n\nexport default ColumnDate;\n","import * as React from 'react'\nimport { Button, Checkbox } from 'antd';\nimport moment from 'moment';\nimport {LeftOutlined, RightOutlined} from \"@ant-design/icons/lib\";\n\nimport 'antd/dist/antd.min.css';\nimport styles from './styles.module.css'\nimport './styles.css';\n\nimport ColumnDate from \"./ColumnDate\";\n\nconst RowCheckBoxes = (props: any) => {\n  let row = [];\n  let index = props.row;\n  let map = props.availabilities;\n  let dateFormated;\n  let key;\n  let av;\n  let checked = false;\n  let disable = false;\n  let startHour, endHour;\n  let {start, end} = props.interval || {start:undefined, end:undefined };\n  for (let i = 0; i < props.dates.length; i++) {\n    const date = props.dates[i];\n    if(start) {\n      startHour = moment(date).set('hour', start).set('minute', 0).set('second', 0).set('millisecond', 0);\n    }\n    if(end) {\n      endHour = moment(date).set('hour', end).set('minute', 0).set('second', 0).set('millisecond', 0);\n    }\n\n    dateFormated = date.format('Y_M_D');\n    key = index + '-' + i + '-' + dateFormated;\n    av = map ? map.get(dateFormated) : false;\n    checked = false;\n    disable = false;\n    if (av && av.checked) {\n      checked = av.checked[index];\n    }\n    if(date.isBefore(props.disableBefore)) {\n      disable = true;\n    } else if(Array.isArray(props.disabledDates) && (startHour || endHour)) {\n      for(let i = 0; !disable && i<props.disabledDates.length; i++){\n        const disabledDate = props.disabledDates[i];\n        // @ts-ignore\n        if(startHour && startHour._d != 'Invalid Date' && startHour.isBetween(disabledDate.start, disabledDate.end, null, '[]')) {\n          disable = true;\n        }\n        if(!disable) {\n          // @ts-ignore\n          if(endHour && endHour._d != 'Invalid Date' && endHour.isBetween(disabledDate.start, disabledDate.end, null, '[]')) {\n            disable = true;\n          }\n        }\n      }\n    }\n\n    row.push(\n      <td key={key + '-td'}>\n        <Checkbox\n          id={key + '-cb'}\n          ref={props.cbRef}\n          disabled={disable}\n          checked={disable ? false : checked}\n          onChange={props.handleChange}\n          className={styles.biggerCheckbox}\n          value=\"off\"\n        />\n      </td>\n    );\n  }\n\n  return <React.Fragment>{row}</React.Fragment>;\n};\n\nexport class CheckCalendar extends React.Component<any, any> {\n  checkBoxes: Map<string, any>;\n  constructor(props: any) {\n    super(props);\n    const rowsCheck = [];\n    let weeks = props.maxWeeks ? props.maxWeeks : 4;\n    for (let i = 0; i < weeks; i++) {\n      rowsCheck.push([false, false, false, false]);\n    }\n\n    let hoursIntervals = props.hoursIntervals;\n\n    if (!hoursIntervals) {\n      hoursIntervals = [\n        { start: 8, end: 10 },\n        { start: 10, end: 12, pause: { start: 12, end: 13 } },\n        { start: 12, end: 15 },\n        { start: 15, end: 17 }\n      ];\n    }\n\n    this.checkBoxes = new Map();\n    this.state = {\n      rowsCheck,\n      firstDate: moment(),\n      dates: [],\n      datesMap: new Map(),\n      week: 0,\n      maxWeeks: props.maxWeeks ? props.maxWeeks : 4,\n      hoursIntervals: hoursIntervals,\n      loading: false\n    };\n  }\n\n  componentDidMount () {\n    this._initDates(this.state.firstDate);\n  }\n\n  _initDates(startDate: moment.Moment | string, week: number = 0) {\n    let datesMap = this.state.datesMap;\n    let dates = new Array(5);\n    let firstDate: moment.Moment;\n    let refFormat = 'Y_M_D';\n    if (startDate instanceof moment) {\n      dates[0] = firstDate = startDate as moment.Moment;\n    } else {\n      dates[0] = firstDate = moment(startDate);\n    }\n\n    if (!datesMap.get(firstDate.format(refFormat))) {\n      let d: any = [];\n      d['date'] = firstDate;\n      datesMap.set(firstDate.format(refFormat), d);\n    }\n\n    let date: any;\n    for (let i = 1; i < dates.length; i++) {\n      dates[i] = moment(dates[i-1]).add(1, 'day');\n      if (dates[i].day() === 6 || dates[i].day() === 0) {\n        dates[i] = dates[i].add(1, 'week').set('day',1);\n      }\n      if (!datesMap.get(dates[i].format(refFormat))) {\n        date = [];\n        date['date'] = dates[i];\n        datesMap.set(dates[i].format(refFormat), date);\n      }\n    }\n\n    this.setState({\n      dates,\n      datesMap,\n      currentDate: firstDate,\n      week\n    });\n  }\n\n  handleNextWeek = () => {\n    let firstDate = this.state.firstDate;\n    let week = this.state.week;\n    week = week + 1;\n    firstDate.add(7,'day');\n    this.setState({ loading:true });\n    setTimeout(() => {\n      this._initDates(firstDate, week);\n      this.setState({ loading:false });\n    }, 400);\n\n  };\n\n  handlePreviousWeek = () => {\n    this.setState({ loading:true });\n    setTimeout(() => {\n\n      let firstDate = this.state.firstDate;\n      let week = this.state.week;\n      let current = moment(new Date());\n      week--;\n      firstDate.subtract(7,'day');\n      if(firstDate.diff(current)<0) {\n        week = 0;\n        firstDate = current;\n      }\n\n      this._initDates(firstDate, week);\n      this.setState({ loading:false });\n\n    }, 400);\n\n  };\n\n  handleCheckBoxChange = (e: any) => {\n    let checked = e.target.checked;\n    let keys = e.target.id.split('-');\n    let row = keys[0];\n    //let col = keys[1];\n    let map_key = keys[2];\n    let hoursIntervals = this.state.hoursIntervals;\n    let datesMap = this.state.datesMap;\n    let dispo = datesMap.get(map_key);\n    let startDate = dispo.date.clone();\n    let endDate = dispo.date.clone();\n    if (!dispo.availabilities) {\n      dispo.availabilities = [];\n    }\n\n    if (!dispo.checked) {\n      dispo.checked = [false, false, false, false];\n    }\n\n    startDate.set('minute', 0).set('second', 0).set('millisecond',0);\n    endDate.set('minute', 0).set('second', 0).set('millisecond',0);\n\n    startDate.set('hour', hoursIntervals[parseInt(row,10)].start);\n    endDate.set('hour', hoursIntervals[parseInt(row,10)].end);\n\n    let new_dispo;\n    if (checked) {\n      e.target.checked = true;\n      dispo.checked[parseInt(row,10)] = true;\n      new_dispo = CheckCalendar._addAvailabilities(dispo, startDate, endDate);\n    } else {\n      e.target.checked = false;\n      dispo.checked[parseInt(row,10)] = false;\n      new_dispo = CheckCalendar._removeAvailabilities(dispo, startDate, endDate);\n    }\n    datesMap.set(map_key, new_dispo);\n    this.setState({ datesMap });\n\n  };\n\n  static _addAvailabilities(dispo: any, start: moment.Moment, end: moment.Moment ) {\n    let d_av =  dispo.availabilities;\n    let ava = { start, end };\n    let chained = false;\n    if (d_av.length===0) {\n      chained = true;\n      d_av.push(ava);\n    } else {\n      for(let a of d_av ) {\n        if (a.start.diff(start,'minutes')>0) { // before already checked\n          if (a.start.diff(end, 'minutes') === 0) { // chained hours\n            a.start = start;\n            chained = true;\n          }\n        } else if ( a.start.diff(start,'minutes') < 0) {  // after already checked\n          if (a.end.diff(start, 'minutes') === 0) { // chained hours\n            a.end = end;\n            chained = true;\n          }\n        } else {\n          chained = true;\n        }\n      }\n    }\n\n    if (!chained) {\n      d_av.push(ava);\n    }\n\n    if (d_av.length > 1) {\n      if ((d_av[0].end.isBetween(d_av[1].start,d_av[1].end)) || d_av[0].start.isBetween(d_av[1].start, d_av[1].end)\n        || (d_av[1].end.isBetween(d_av[0].start,d_av[0].end)) || d_av[1].start.isBetween(d_av[0].start, d_av[0].end) ) {\n\n        if (d_av[0].start.diff(d_av[1].start, 'minutes') > 0 ) {\n          d_av[0].start.set('hour', d_av[1].start.get('hour'));\n        }\n\n        if ( d_av[0].end.diff(d_av[1].end, 'minutes') < 0 ) {\n          d_av[0].end.set('hour', d_av[1].end.get('hour'));\n        }\n        d_av = [d_av[0]];\n      }\n    }\n    dispo.availabilities = d_av;\n    return dispo;\n  }\n\n  static _removeAvailabilities(dispo: any, start: moment.Moment, end: moment.Moment) {\n    let d_av = dispo.availabilities;\n    if (d_av.length !== 0) {\n      let del: string | boolean = false;\n      let divider;\n      let av;\n      for(let i in d_av) {\n        av = d_av[i];\n        if ( start.diff(av.start, 'minutes') === 0 ) {\n          if ( end.diff(av.end, 'minutes') === 0 ) {\n            del = i;\n          } else {\n            av.start.set('hour', end.get('hour'));\n          }\n        } else if ( end.diff(av.end,'minutes') === 0 ) {\n          if ( start.diff(av.start, 'minutes') === 0 ) {\n            del = i;\n          } else {\n            av.end.set('hour', start.get('hour'));\n          }\n        } else if ( start.isBetween(av.start, av.end) || end.isBetween(av.start, av.end) ) {\n          divider = [{ start: av.start.clone(), end: start.clone() }, { start:end.clone(),end: av.end.clone() }];\n        }\n      }\n      if (divider) {\n        dispo.availabilities = divider;\n      } else if (del !== false) {\n        dispo.availabilities.splice(del,1);\n      }\n    }\n    return dispo;\n  }\n\n  getDates() {\n    let map = this.state.datesMap;\n    let availabilities: any[] = [];\n\n    map.forEach((value: any) => {\n      if (value.availabilities) {\n        for (let a of value.availabilities) {\n          availabilities.push({ start: a.start.toDate(), end: a.end.toDate() });\n        }\n      }\n    });\n\n    return availabilities;\n  }\n\n  getMoments() {\n    let map = this.state.datesMap;\n    let availabilities: any[] = [];\n\n    map.forEach((value: any) => {\n      if (value.availabilities) {\n        for (let a of value.availabilities) {\n          availabilities.push(a);\n        }\n      }\n    });\n\n    return availabilities;\n  }\n\n  handleRowMouseEnter = (e: any) => {\n    let id = e.target.id;\n    /*// FOCUS NOT WORKING ?\n    let { dates } = this.state;\n    let df, cb, cb_key;\n    let i = 0;\n    for ( let date of dates ) {\n      cb_key = id+'-'+(i);\n      cb = this.checkBoxes[cb_key];\n      //console.log(cb_key, cb);\n      if(cb){\n        cb.focus();\n      }\n      i++;\n    }*/\n\n    const line = this.refs['hoursRow-' + id];\n\n    if (line) {\n      // @ts-ignore\n      line.className = 'hoverHourRow';\n    }\n  };\n\n  handleRowMouseLeave = (e: any) => {\n    const line = this.refs['hoursRow-' + e.target.id];\n    if (line) {\n      // @ts-ignore\n      line.className = 'defaultHourRow';\n    } else {\n      for (let i = 0; i < 4; i++) {\n        // @ts-ignore\n        this.refs['hoursRow-' + i].className = 'defaultHourRow';\n      }\n    }\n  };\n\n  handleRowClick = (e: React.MouseEvent<HTMLTableDataCellElement>) => {\n    let row = (e.target as HTMLElement).id;\n    let { dates, rowsCheck, hoursIntervals } = this.state;\n    // let datesMap = this.state.datesMap;\n    let dateFormated;//,mapItem ;\n    let index = parseInt(row, 10);\n    let check = rowsCheck[this.state.week][index] = !rowsCheck[this.state.week][index];\n    let target = { id: '' };\n    let checkBoxId = {};\n    let now: string | moment.Moment = moment();\n    let hour = now.get('hour');\n    now = now.format('Y_M_D');\n    // @ts-ignore\n    checkBoxId.target = target;\n    let i = 0;\n\n    for (let date of dates) {\n      dateFormated = moment(date).format('Y_M_D');\n      //mapItem = datesMap.get(dateFormated);\n      // @ts-ignore\n      checkBoxId.target.id = row + '-' + i + '-' + dateFormated+'-cb';\n      // @ts-ignore\n      checkBoxId.target.checked = check;\n\n      if (dateFormated === now) {\n        if (hour >= hoursIntervals[index].start) {\n          // @ts-ignore\n          checkBoxId.target.checked = false;\n        }\n      }\n\n      this.handleCheckBoxChange(checkBoxId);\n      i++;\n    }\n    this.setState({ rowsCheck });\n  };\n\n  handleCheckBoxCreate = (cb: any) => {\n    if(cb){\n      this.checkBoxes.set(cb.props.id, cb);\n    }\n  };\n\n  render() {\n    const {\n      dates,\n      week,\n      maxWeeks,\n      datesMap,\n      hoursIntervals,\n      loading\n    } = this.state;\n\n    let datesRow = [];\n    let checkBoxRows = [];\n\n    for (let i = 0; i < dates.length; i++) {\n      datesRow.push(\n        <td\n          key={'dateCol-' + i}\n          className={styles.avCalHeadLine}\n        >\n          <ColumnDate date={dates[i]} />\n        </td>\n      );\n    }\n\n    let hours = [];\n    let start, end;\n\n    for (let i = 0; i < hoursIntervals.length; i++) {\n      if (hoursIntervals[i].pause) {\n        if (hoursIntervals[i].pause.start === hoursIntervals[i].start) {\n          start = hoursIntervals[i].pause.end;\n          end = hoursIntervals[i].end;\n        } else {\n          start = hoursIntervals[i].start;\n          end = hoursIntervals[i].pause.start;\n        }\n      } else {\n        start = hoursIntervals[i].start;\n        end = hoursIntervals[i].end;\n      }\n\n      hours.push(\n        <div id={i.toString()}>\n          de <span id={i.toString()} className={styles.hSpan}>{start}H</span> à <span id={i.toString()} className={styles.hSpan}>{end}H</span>\n        </div>\n      );\n    }\n\n    for (let i = 0; i < hoursIntervals.length; i++) {\n      checkBoxRows.push(\n        <tr\n          className={styles.defaultHourRow}\n          key={'hoursRow-' + i}\n          ref={'hoursRow-' + i}\n        >\n          <td\n            className={styles.timeCol}\n            id={i.toString()}\n            onClick={this.handleRowClick}\n            onMouseEnter={this.handleRowMouseEnter}\n            onMouseLeave={this.handleRowMouseLeave}\n          >\n            {hours[i]}\n          </td>\n          <RowCheckBoxes\n            hoursIntervals={hoursIntervals}\n            interval = { hoursIntervals[i] }\n            dates={dates}\n            disabledDates={ this.props.disabledDates }\n            checkedDates = { this.props.checkedDates }\n            disableBefore = { this.props.disableBefore || moment() }\n            availabilities={datesMap}\n            row={i}\n            handleChange={this.handleCheckBoxChange}\n            cbRef={(checkbox: any) => { this.handleCheckBoxCreate(checkbox); }}\n          />\n        </tr>\n      );\n    }\n\n    return (\n      <div\n        className={styles.prospectCalendar}\n      >\n        <div className={styles.navBarAvCalendar}>\n          <Button\n            className={styles.btnPrevAvCalendar}\n            type=\"primary\"\n            disabled={week === 0}\n            onClick={this.handlePreviousWeek}\n          >\n            <LeftOutlined />Semaine précédente\n          </Button>\n          <Button\n            className={styles.btnNextAvCalendar}\n            type=\"primary\"\n            disabled={!(week < maxWeeks - 1)}\n            onClick={this.handleNextWeek}\n          >\n            Semaine suivante<RightOutlined />\n          </Button>\n        </div>\n        <div\n          className={loading ? styles.avCalHide : styles.avCalShow}\n          ref=\"calendar\"\n        >\n          <table className={styles.avCalTable}>\n            <thead/>\n            <tbody>\n            <tr className={styles.avCalHeadLine}>\n              <td\n                className={styles.avCalHeadLine}\n              />\n              {datesRow}\n            </tr>\n            {checkBoxRows}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckCalendar;\n"],"names":["CheckContext","React","locale","ColumnDate","date","Moment","className","format","RowCheckBoxes","props","dateFormated","key","av","startHour","endHour","row","index","map","availabilities","checked","disable","interval","start","undefined","end","i","dates","length","moment","set","get","isBefore","disableBefore","Array","isArray","disabledDates","disabledDate","_d","isBetween","push","Checkbox","id","ref","cbRef","disabled","onChange","handleChange","styles","biggerCheckbox","value","CheckCalendar","_this","firstDate","state","week","add","setState","loading","setTimeout","_initDates","current","Date","subtract","diff","e","new_dispo","target","keys","split","map_key","hoursIntervals","datesMap","dispo","startDate","clone","endDate","parseInt","_addAvailabilities","_removeAvailabilities","line","refs","rowsCheck","check","checkBoxId","now","hour","handleCheckBoxChange","cb","checkBoxes","weeks","maxWeeks","pause","Map","componentDidMount","this","d","day","currentDate","d_av","ava","chained","a","divider","del","splice","getDates","forEach","toDate","getMoments","render","datesRow","checkBoxRows","avCalHeadLine","hours","toString","hSpan","defaultHourRow","timeCol","onClick","handleRowClick","onMouseEnter","handleRowMouseEnter","onMouseLeave","handleRowMouseLeave","checkedDates","checkbox","_this2","handleCheckBoxCreate","prospectCalendar","navBarAvCalendar","Button","btnPrevAvCalendar","type","handlePreviousWeek","LeftOutlined","btnNextAvCalendar","handleNextWeek","RightOutlined","avCalHide","avCalShow","avCalTable"],"mappings":"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"}