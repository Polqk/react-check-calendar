{"version":3,"file":"index.js","sources":["../src/Left.tsx","../src/Right.tsx","../src/defaults.ts","../src/context.tsx","../src/helpers.ts","../src/RowHeader.tsx","../src/ColumnDate.tsx","../src/CheckBox/index.tsx","../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface Props {\n}\n\nconst Left: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49\n      256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-\n      9.37-9.37-9.37-24.57 0-33.94z\"\n    />\n  </svg>\n);\n\nexport default Left;\n","import * as React from 'react';\n\ninterface Props {\n}\n\nconst Right: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522\n      -.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373\n       33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n    />\n  </svg>\n);\n\nexport default Right;\n","import {CheckCalendarContext, CheckCalendarProps, DatesFormats} from \"./types\";\n\nexport const defaultProps: CheckCalendarProps = {\n  startWeekDay: 1,\n  locale: 'en',\n  hoursIntervals: [\n    { start: 8, end: 10 },\n    { start: 10, end: 12 },\n    { start: 13, end: 15 },\n    { start: 15, end: 17 }\n  ],\n  hideDays: [0, 6]\n};\n\nexport const defaultContext: CheckCalendarContext = {\n  props: defaultProps\n};\n\nexport const defaultDatesFormats: DatesFormats = {\n  fromHour: '[from] [<strong>]h:mm[</strong>][<small>]a[</small>]',\n  toHour: ' [to] [<strong>]h:mm[</strong>][<small>]a[</small>]'\n};\n","import * as React from 'react';\nimport { CheckCalendarContext } from \"./types\";\nimport {defaultContext} from \"./defaults\";\n\nconst CheckContext = React.createContext<CheckCalendarContext>(defaultContext);\nexport const CheckContextProvider = CheckContext.Provider;\nexport default CheckContext;\n","import moment from 'moment';\nimport {CheckCalendarProps, MomentOrDateRange, MomentRange} from \"./types\";\nimport { defaultDatesFormats } from \"./defaults\";\n\nexport const getMomentFromNumber = (date: moment.Moment, value: number) => {\n  const trunced =  Math.trunc(value);\n  return date.clone()\n    .set('hour', trunced)\n    .set('minutes', (value - trunced) * 60)\n    .set('second', 0)\n    .set('millisecond', 0);\n};\n\nexport const getDatesFormats = (props: CheckCalendarProps) =>\n  ({ ...defaultDatesFormats, ...props.datesFormats });\n\nexport const getArrayDates = (start: moment.Moment, count: number) => {\n  const dates = []\n\n  const clonedStart = start.clone().set('hour', 0).set('minute', 0).set('second', 0).set('millisecond', 0);\n\n  for (let i = 0; i < count; i++) {\n    dates.push(clonedStart.clone().add(i, 'day'));\n  }\n\n  return dates;\n};\n\nexport const isInInterval = (interval1: MomentOrDateRange, interval2: MomentOrDateRange) => {\n  const { start, end } = getMomentsFromRange(interval1);\n  const { start: start2, end: end2 } = getMomentsFromRange(interval2);\n\n  return start.isSame(start2, \"minute\") ||\n    end.isSame(end2, \"minute\") ||\n    start.isBetween(start2, end2, 'minutes', '()') ||\n    end.isBetween(start2, end2, 'minutes', '()');\n}\n\nexport const getMomentsFromRange = (interval: MomentOrDateRange): MomentRange => ({\n  start: getMomentFromDate(interval.start),\n  end: getMomentFromDate(interval.end)\n})\n\nexport const getMomentFromDate = (date: Date | moment.Moment | string) =>\n  date instanceof moment ? date as moment.Moment : moment(date);\n","import * as React from 'react';\nimport {HourInterval} from \"./types\";\nimport {getDatesFormats, getMomentFromNumber} from \"./helpers\";\nimport HTMLParser from \"html-react-parser\";\nimport CheckContext from \"./context\";\nimport moment from \"moment\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  interval: HourInterval;\n}\n\nconst RowHeader: React.FC<Props> = ({ interval }) => {\n  const { props } = React.useContext(CheckContext);\n  const { start, end } = interval;\n  const { fromHour, toHour } = getDatesFormats(props);\n\n  if (props.renderRowHeader) {\n    return props.renderRowHeader(interval);\n  }\n\n  return (\n      <td className={classNames('check-calendar__row-header', props.headerRowClassName)}>\n        <div className=\"check-calendar__hour\">\n          {start && HTMLParser(`<span>${\n            getMomentFromNumber(moment(), start).format(fromHour)\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''}</span>`)}\n          {end && HTMLParser(`<span>${\n            getMomentFromNumber(moment(), end).format(toHour)\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''\n          }</span>`)}\n        </div>\n      </td>\n  )\n}\n\nexport default RowHeader;\n","import * as React from 'react';\nimport Moment from \"react-moment\";\nimport * as moment from \"moment\";\nimport CheckContext from \"./context\";\n\ninterface Props {\n  date: moment.Moment;\n}\n\nconst ColumnDate: React.FC<Props> = ({ date }) => {\n  const { props } = React.useContext(CheckContext);\n\n  if (props.renderColumnHeader) {\n    return props.renderColumnHeader(date);\n  }\n\n  return (\n    <div>\n      <div>\n        <Moment\n          className=\"check-calendar_day\"\n          locale={props?.locale}\n          format=\"ddd\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar__day-number\"\n          locale=\"fr\"\n          format=\"DD\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar__month\"\n          locale=\"fr\"\n          format=\"MMM\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div\n        // class=\"d-optionDetails\"\n      />\n    </div>\n  );\n}\n\nexport default ColumnDate;\n","import * as React from 'react';\nimport './checkbox.css';\nimport classNames from 'classnames';\nimport {MomentRange} from \"../types\";\nimport {getMomentFromDate} from \"../helpers\";\nimport CheckContext from \"../context\";\n\nexport type CheckBoxChangeHandler = (value: boolean, props: Props) => void;\ntype CheckboxProps = {\n  ref?: any;\n  onChange: CheckBoxChangeHandler;\n  interval: MomentRange;\n}\n\ntype InputProps = Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>;\ntype Props = CheckboxProps & InputProps;\n\nconst Checkbox: React.FC<Props> = ({interval, ...props}) => {\n  const {props: { disableBefore, disableAfter, disabledDates } } = React.useContext(CheckContext);\n\n  const _handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.checked;\n    props.onChange(value, {...props, checked: value, value: value ? 0 : 1, interval })\n  };\n\n  const isBeforeDisabled = disableBefore ? interval.end.isBefore(getMomentFromDate(disableBefore)) : false;\n  const isAfterDisabled = disableAfter ? interval.start.isAfter(getMomentFromDate(disableAfter)) : false;\n  const isDisabledDate = Array.isArray(disabledDates)\n    ? disabledDates.some(d => getMomentFromDate(d).isBetween(interval.start, interval.end))\n    : false;\n\n  const disabled = props.disabled || isBeforeDisabled || isAfterDisabled || isDisabledDate;\n  return (\n    <label className={classNames('check-calendar-checkbox__wrapper', { disabled }, props.className)}>\n      <span className=\"check-calendar-checkbox\">\n        <input\n          {...props}\n          onChange={_handleChange}\n          className={classNames('check-calendar-checkbox__input')}\n          type=\"checkbox\"\n          disabled={disabled}\n        />\n      <span className=\"check-calendar-checkbox__inner\" />\n    </span>\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import * as React from 'react';\nimport {CheckCalendarProps, CheckCalendarState, MomentRange} from \"./types\";\nimport LeftIcon from \"./Left\";\nimport RightIcon from \"./Right\";\nimport classNames from \"classnames\";\nimport { defaultProps } from \"./defaults\";\nimport { CheckContextProvider } from \"./context\";\nimport RowHeader from \"./RowHeader\";\nimport moment from \"moment\";\nimport ColumnDate from \"./ColumnDate\";\nimport {getArrayDates, getMomentFromNumber, getMomentsFromRange, isInInterval} from \"./helpers\";\nimport Checkbox, {CheckBoxChangeHandler} from \"./CheckBox\";\n\nimport './styles.css';\n\nclass CheckCalendar extends React.Component<CheckCalendarProps, CheckCalendarState> {\n  static defaultProps = defaultProps;\n\n  state = {\n    loading: false,\n    currentDate: moment(this.props.start).set('day', this.props.startWeekDay || 1),\n    checkedRanges: []\n  };\n\n  render() {\n    const {\n      hoursIntervals,\n      hideDays,\n      max,\n      min,\n      checkedDates,\n      leftButton,\n      rightButton,\n      containerClassName,\n      tableClassName,\n      headerClassName,\n      contentClassName\n    } = this.props;\n\n    const { loading, currentDate, checkedRanges } = this.state;\n    const dates = getArrayDates(currentDate, 7);\n    const checked = Array.isArray(checkedDates) ? checkedDates : checkedRanges;\n\n    return (\n      <CheckContextProvider value={{ props: this.props }}>\n        <div className={classNames('check-calendar', containerClassName)}>\n          <button\n            className={classNames('check-calendar__button check-calendar__prev', leftButton?.className)}\n            disabled={!!min && dates[0].clone().subtract(1, 'day').isBefore(moment(min))}\n            onClick={this._handlePrevious}\n          >\n            {leftButton?.content || <LeftIcon/>}\n          </button>\n          <button\n            className={classNames('check-calendar__button check-calendar__next', rightButton?.className)}\n            disabled={!!max && dates[dates.length - 1].clone().add(1, 'day').isAfter(moment(max))}\n            onClick={this._handleNext}\n          >\n            {rightButton?.content || <RightIcon/>}\n          </button>\n          <div\n            className={classNames('check-calendar__container', {'check-calendar__container--hide': loading})}\n            ref=\"calendar\"\n          >\n            <table className={classNames('check-calendar__table', tableClassName)}>\n              <thead/>\n              <tbody>\n              <tr className=\"check-calendar__header\">\n                <td\n                  className={classNames(headerClassName)}\n                />\n                {dates.map((current) => {\n                    return (\n                      <td\n                        key={current.format('YYYY_MM_DD')}\n                        className={classNames(headerClassName, { 'check-calendar__hidden': hideDays?.includes(current.day()) })}\n                      >\n                        <ColumnDate date={current} />\n                      </td>\n                    );\n                  })}\n              </tr>\n              {hoursIntervals && hoursIntervals.map((row) => (\n                <tr key={`${row.start}_${row.end}`}>\n                  <RowHeader interval={row} />\n                  {dates.map(day => {\n                    const interval = {\n                      start: getMomentFromNumber(day, row.start),\n                      end: getMomentFromNumber(day, row.end)\n                    };\n\n                    return (\n                      <td\n                        key={`${day.format('YYYY_MM_DD')}_${row.start}_${row.end}`}\n                        className={classNames(contentClassName, { 'check-calendar__hidden': hideDays?.includes(day.day()) })}\n                      >\n                        <Checkbox\n                          interval={interval}\n                          onChange={this._handleChange}\n                          checked={!!(checked).find(c => isInInterval(c, interval))}\n                          value=\"off\"\n                        />\n                      </td>\n                    )\n                  })}\n                </tr>\n              ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </CheckContextProvider>\n    );\n  }\n\n  _handlePrevious = () => {\n    this.setState({ loading:true });\n    setTimeout(() => {\n      this.setState({\n        loading:false,\n        currentDate: this.state.currentDate.clone().subtract(7, 'days')\n      }, this.props.onPreviousClick);\n\n    }, 400);\n\n  };\n\n  _handleNext = () => {\n    this.setState({ loading: true });\n\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        currentDate: this.state.currentDate.clone().add(7, 'days')\n      }, this.props.onNextClick);\n    }, 400);\n  };\n\n  _handleChange: CheckBoxChangeHandler = ( value, props) => {\n    const { checkedRanges } = this.state;\n    const { interval } = props;\n    const { onChange, checkedDates } = this.props;\n    let newChecked = [...Array.isArray(checkedDates) ? checkedDates : checkedRanges];\n    if (value) {\n      newChecked.push(interval);\n    } else {\n\n      const foundIndex = newChecked.findIndex((c) => isInInterval(c, interval));\n\n      if (foundIndex > -1) {\n        newChecked.splice(foundIndex, 1);\n      }\n    }\n\n    newChecked = newChecked.map(i => getMomentsFromRange(i));\n\n    if (onChange) {\n\n      onChange({\n        dates: (newChecked as MomentRange[]).map(i => ({ start: i.start.toDate(), end: i.end.toDate() })) ,\n        moments: newChecked as MomentRange[]\n      });\n\n    }\n\n    if (!Array.isArray(checkedDates)) {\n      this.setState({ checkedRanges: newChecked as MomentRange[] });\n    }\n  };\n\n}\n\nexport {\n  CheckCalendar,\n  CheckCalendarProps,\n  defaultProps,\n  LeftIcon,\n  RightIcon\n};\n"],"names":["Left","React","height","viewBox","d","Right","defaultProps","startWeekDay","locale","hoursIntervals","start","end","hideDays","defaultContext","props","defaultDatesFormats","fromHour","toHour","CheckContext","CheckContextProvider","Provider","getMomentFromNumber","date","value","trunced","Math","trunc","clone","set","getDatesFormats","datesFormats","getArrayDates","count","dates","clonedStart","i","push","add","isInInterval","interval1","interval2","getMomentsFromRange","start2","end2","isSame","isBetween","interval","getMomentFromDate","moment","RowHeader","renderRowHeader","className","classNames","headerRowClassName","HTMLParser","format","replace","charAt","indexOf","ColumnDate","renderColumnHeader","Moment","Checkbox","disableBefore","disableAfter","disabledDates","_handleChange","e","target","checked","onChange","isBeforeDisabled","isBefore","isAfterDisabled","isAfter","isDisabledDate","Array","isArray","some","disabled","type","CheckCalendar","loading","currentDate","checkedRanges","setState","setTimeout","state","subtract","onPreviousClick","onNextClick","checkedDates","newChecked","foundIndex","findIndex","c","splice","map","toDate","moments","render","max","min","leftButton","rightButton","containerClassName","tableClassName","headerClassName","contentClassName","onClick","_handlePrevious","content","LeftIcon","length","_handleNext","RightIcon","ref","current","key","includes","day","row","find"],"mappings":"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"}