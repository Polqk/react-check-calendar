{"version":3,"file":"index.js","sources":["../src/Left.tsx","../src/Right.tsx","../src/defaults.ts","../src/context.tsx","../src/helpers.ts","../src/RowHeader.tsx","../src/ColumnDate.tsx","../src/CheckBox/index.tsx","../src/index.tsx"],"sourcesContent":["import * as React from 'react';\n\ninterface Props {\n}\n\nconst Left: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49\n      256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-\n      9.37-9.37-9.37-24.57 0-33.94z\"\n    />\n  </svg>\n);\n\nexport default Left;\n","import * as React from 'react';\n\ninterface Props {\n}\n\nconst Right: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522\n      -.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373\n       33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n    />\n  </svg>\n);\n\nexport default Right;\n","import {CheckCalendarContext, CheckCalendarProps, DatesFormats} from \"./types\";\n\nexport const defaultProps: CheckCalendarProps = {\n  startWeekDay: 1,\n  checkedDates: [],\n  disabledDates: [],\n  locale: 'en',\n  hoursIntervals: [\n    { start: 8, end: 10 },\n    { start: 10, end: 12 },\n    { start: 13, end: 15 },\n    { start: 15, end: 17 }\n  ],\n  hideDays: [0, 6]\n};\n\nexport const defaultContext: CheckCalendarContext = {\n  props: defaultProps\n};\n\nexport const defaultDatesFormats: DatesFormats = {\n  fromHour: '[from] [<strong>]h:mm[</strong>][<small>]a[</small>]',\n  toHour: ' [to] [<strong>]h:mm[</strong>][<small>]a[</small>]'\n};\n","import * as React from 'react';\nimport { CheckCalendarContext } from \"./types\";\nimport {defaultContext} from \"./defaults\";\n\nconst CheckContext = React.createContext<CheckCalendarContext>(defaultContext);\nexport const CheckContextProvider = CheckContext.Provider;\nexport default CheckContext;\n","import moment from 'moment';\nimport {CheckCalendarProps, MomentOrDateRange, MomentRange} from \"./types\";\nimport { defaultDatesFormats } from \"./defaults\";\n\nexport const getMomentFromNumber = (date: moment.Moment, value: number) => {\n  const trunced =  Math.trunc(value);\n  return date.clone()\n    .set('hour', trunced)\n    .set('minutes', (value - trunced) * 60)\n    .set('second', 0)\n    .set('millisecond', 0);\n};\n\nexport const getDatesFormats = (props: CheckCalendarProps) =>\n  ({ ...defaultDatesFormats, ...props.datesFormats });\n\nexport const getArrayDates = (start: moment.Moment, count: number) => {\n  const dates = []\n\n  const clonedStart = start.clone().set('hour', 0).set('minute', 0).set('second', 0).set('millisecond', 0);\n\n  for (let i = 0; i < count; i++) {\n    dates.push(clonedStart.clone().add(i, 'day'));\n  }\n\n  return dates;\n};\n\nexport const isInInterval = (interval1: MomentOrDateRange, interval2: MomentOrDateRange) => {\n  const { start, end } = getMomentsFromRange(interval1);\n  const { start: start2, end: end2 } = getMomentsFromRange(interval2);\n\n  return start.isSame(start2, \"minute\") ||\n    end.isSame(end2, \"minute\") ||\n    start.isBetween(start2, end2, 'minutes', '()') ||\n    end.isBetween(start2, end2, 'minutes', '()');\n}\n\nexport const getMomentsFromRange = (interval: MomentOrDateRange): MomentRange => ({\n  start: getMomentFromDate(interval.start),\n  end: getMomentFromDate(interval.end)\n})\n\nexport const getMomentFromDate = (date: Date | moment.Moment) =>\n  date instanceof moment ? date as moment.Moment : moment(date);\n","import * as React from 'react';\nimport {HourInterval} from \"./types\";\nimport {getDatesFormats, getMomentFromNumber} from \"./helpers\";\nimport HTMLParser from \"html-react-parser\";\nimport CheckContext from \"./context\";\nimport moment from \"moment\";\n\ninterface Props {\n  item: HourInterval;\n}\n\nconst RowHeader: React.FC<Props> = ({ item }) => {\n  const { props } = React.useContext(CheckContext);\n  const { start, end } = item;\n  const { fromHour, toHour } = getDatesFormats(props);\n\n  return (\n      <td className=\"check-calendar__row-header\">\n        <div className=\"check-calendar__hour\">\n          {start && HTMLParser(`<span>${\n            getMomentFromNumber(moment(), start).format(fromHour)\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''}</span>`)}\n          {end && HTMLParser(`<span>${\n            getMomentFromNumber(moment(), end).format(toHour)\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''\n          }</span>`)}\n        </div>\n      </td>\n  )\n}\n\nexport default RowHeader;\n","import * as React from 'react';\nimport Moment from \"react-moment\";\nimport * as moment from \"moment\";\nimport CheckContext from \"./context\";\n\ninterface Props {\n  date: moment.Moment;\n}\n\nconst ColumnDate: React.FC<Props> = ({ date }) => {\n  const { props } = React.useContext(CheckContext);\n  return (\n    <div>\n      <div>\n        <Moment\n          className=\"check-calendar_day\"\n          locale={props?.locale}\n          format=\"ddd\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar__day-number\"\n          locale=\"fr\"\n          format=\"DD\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div>\n        <Moment\n          className=\"check-calendar__month\"\n          locale=\"fr\"\n          format=\"MMM\"\n        >\n          {date}\n        </Moment>\n      </div>\n      <div\n        // class=\"d-optionDetails\"\n      />\n    </div>\n  );\n}\n\nexport default ColumnDate;\n","import * as React from 'react';\nimport './checkbox.css';\nimport classNames from 'classnames';\nimport {MomentRange} from \"../types\";\n\nexport type CheckBoxChangeHandler = (value: boolean, props: Props) => void;\ntype CheckboxProps = {\n  ref?: any;\n  onChange?: CheckBoxChangeHandler;\n  interval: MomentRange;\n}\n\ntype InputProps = Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>;\ntype Props = CheckboxProps & InputProps;\n\nconst Checkbox: React.FC<Props> = (props) => {\n  const _handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.checked;\n    if (props.onChange) {\n      props.onChange(value, {...props, checked: value, value: value ? 0 : 1 })\n    }\n  };\n  return (\n    <label className={classNames('check-calendar-checkbox__wrapper', { disabled: props.disabled }, props.className)}>\n      <span className=\"check-calendar-checkbox\">\n        <input\n          {...props}\n          onChange={_handleChange}\n          className={classNames('check-calendar-checkbox__input')}\n          type=\"checkbox\"\n        />\n      <span className=\"check-calendar-checkbox__inner\" />\n    </span>\n    </label>\n  );\n}\n\nexport default Checkbox;\n","import * as React from 'react';\nimport {CheckCalendarProps, CheckCalendarState, MomentRange} from \"./types\";\nimport Left from \"./Left\";\nimport Right from \"./Right\";\nimport classNames from \"classnames\";\nimport { defaultProps } from \"./defaults\";\nimport { CheckContextProvider } from \"./context\";\nimport RowHeader from \"./RowHeader\";\nimport moment from \"moment\";\nimport ColumnDate from \"./ColumnDate\";\nimport {getArrayDates, getMomentFromNumber, getMomentsFromRange, isInInterval} from \"./helpers\";\nimport Checkbox, {CheckBoxChangeHandler} from \"./CheckBox\";\n\nimport './styles.css';\n\nclass CheckCalendar extends React.Component<CheckCalendarProps, CheckCalendarState> {\n  static defaultProps = defaultProps;\n\n  state = {\n    loading: false,\n    currentDate: moment(this.props.start).set('day', this.props.startWeekDay || 1),\n    checkedRanges: []\n  };\n\n  render() {\n    const { hoursIntervals, hideDays, max, min, disableBefore, disableAfter, checkedDates } = this.props;\n    const { loading, currentDate, checkedRanges } = this.state;\n    const dates = getArrayDates(currentDate, 7);\n    const checked = Array.isArray(checkedDates) ? checkedDates : checkedRanges;\n\n    return (\n      <CheckContextProvider value={{ props: this.props }}>\n        <div className=\"check-calendar\">\n          <button\n            className=\"check-calendar__button check-calendar__prev\"\n            disabled={!!min && dates[0].clone().subtract(1, 'day').isBefore(moment(min))}\n            onClick={this._handlePrevious}\n          >\n            <Left/>\n          </button>\n          <button\n            className=\"check-calendar__button check-calendar__next\"\n            disabled={!!max && dates[dates.length - 1].clone().add(1, 'day').isAfter(moment(max))}\n            onClick={this._handleNext}\n          >\n            <Right/>\n          </button>\n          <div\n            className={classNames('check-calendar__container', {'check-calendar__container--hide': loading})}\n            ref=\"calendar\"\n          >\n            <table className=\"check-calendar__table\">\n              <thead/>\n              <tbody>\n              <tr className=\"check-calendar__header\">\n                <td\n                  className=\"check-calendar__header\"\n                />\n                {dates.map((current) => {\n                    return (\n                      <td\n                        key={current.format('YYYY_MM_DD')}\n                        className={classNames({ 'check-calendar__hidden': hideDays?.includes(current.day()) })}\n                      >\n                        <ColumnDate date={current} />\n                      </td>\n                    );\n                  })}\n              </tr>\n              {hoursIntervals && hoursIntervals.map((row) => (\n                <tr key={`${row.start}_${row.end}`}>\n                  <RowHeader item={row} />\n                  {dates.map(day => {\n                    const interval = {\n                      start: getMomentFromNumber(day, row.start),\n                      end: getMomentFromNumber(day, row.end)\n                    };\n\n                    const isBeforeDisabled = disableBefore ? interval.end.isBefore(moment(disableBefore)) : false;\n                    const isAfterDisabled = disableAfter ? interval.start.isAfter(moment(disableAfter)) : false;\n\n                    return (\n                      <td\n                        key={`${day.format('YYYY_MM_DD')}_${row.start}_${row.end}`}\n                        className={classNames({ 'check-calendar__hidden': hideDays?.includes(day.day()) })}\n                      >\n                        <Checkbox\n                          interval={interval}\n                          onChange={this._handleChange}\n                          disabled={isBeforeDisabled || isAfterDisabled}\n                          checked={!!(checked).find(c => isInInterval(c, interval))}\n                          value=\"off\"\n                        />\n                      </td>\n                    )\n                  })}\n                </tr>\n              ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </CheckContextProvider>\n    );\n  }\n\n  _handlePrevious = () => {\n    this.setState({ loading:true });\n    setTimeout(() => {\n      this.setState({\n        loading:false,\n        currentDate: this.state.currentDate.clone().subtract(7, 'days')\n      });\n\n    }, 400);\n\n  };\n\n  _handleNext = () => {\n    this.setState({ loading: true });\n\n    setTimeout(() => {\n      this.setState({\n        loading: false,\n        currentDate: this.state.currentDate.clone().add(7, 'days')\n      });\n    }, 400);\n  };\n\n  _handleChange: CheckBoxChangeHandler = ( value, props) => {\n    const { checkedRanges } = this.state;\n    const { interval } = props;\n    const { onChange, checkedDates } = this.props;\n    let newChecked = [...Array.isArray(checkedDates) ? checkedDates : checkedRanges];\n    if (value) {\n      newChecked.push(interval);\n    } else {\n\n      const foundIndex = newChecked.findIndex((c) => isInInterval(c, interval));\n\n      if (foundIndex > -1) {\n        newChecked.splice(foundIndex, 1);\n      }\n    }\n\n    newChecked = newChecked.map(i => getMomentsFromRange(i));\n\n    if (onChange) {\n\n      onChange({\n        dates: (newChecked as MomentRange[]).map(i => ({ start: i.start.toDate(), end: i.end.toDate() })) ,\n        moments: newChecked as MomentRange[]\n      });\n\n    }\n\n    if (!Array.isArray(checkedDates)) {\n      this.setState({ checkedRanges: newChecked as MomentRange[] });\n    }\n  };\n\n}\n\nexport {\n  CheckCalendar,\n  CheckCalendarProps,\n  defaultProps,\n};\n"],"names":["Left","React","height","viewBox","d","Right","defaultProps","startWeekDay","checkedDates","disabledDates","locale","hoursIntervals","start","end","hideDays","defaultContext","props","defaultDatesFormats","fromHour","toHour","CheckContext","CheckContextProvider","Provider","getMomentFromNumber","date","value","trunced","Math","trunc","clone","set","getDatesFormats","datesFormats","getArrayDates","count","dates","clonedStart","i","push","add","isInInterval","interval1","interval2","getMomentsFromRange","start2","end2","isSame","isBetween","interval","getMomentFromDate","moment","RowHeader","item","className","HTMLParser","format","replace","charAt","indexOf","ColumnDate","Moment","Checkbox","_handleChange","e","target","checked","onChange","classNames","disabled","type","CheckCalendar","loading","currentDate","checkedRanges","setState","setTimeout","state","subtract","newChecked","Array","isArray","foundIndex","findIndex","c","splice","map","toDate","moments","render","max","min","disableBefore","disableAfter","isBefore","onClick","_handlePrevious","length","isAfter","_handleNext","ref","current","key","includes","day","row","isBeforeDisabled","isAfterDisabled","find"],"mappings":"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"}