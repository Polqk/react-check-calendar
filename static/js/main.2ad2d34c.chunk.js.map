{"version":3,"sources":["../../src/Left.tsx","../../src/Right.tsx","../../src/defaults.ts","../../src/context.tsx","../../src/helpers.ts","../../src/RowHeader.tsx","../../src/ColumnDate.tsx","../../src/CheckBox/index.tsx","../../src/index.tsx","Header/index.js","Nav/index.jsx","Code/index.jsx","Content/installation.jsx","Content/introduction.jsx","Content/basic.jsx","Content/parameters.jsx","Content/index.jsx","App.jsx","index.js"],"names":["Left","height","viewBox","d","Right","defaultProps","startWeekDay","locale","hoursIntervals","start","end","hideDays","defaultContext","props","defaultDatesFormats","fromHour","toHour","CheckContext","React","CheckContextProvider","getMomentFromNumber","date","trunced","Math","value","isInInterval","interval1","getMomentsFromRange","interval2","start2","end2","interval","getMomentFromDate","moment","RowHeader","getDatesFormats","className","classNames","HTMLParser","ColumnDate","format","Checkbox","disableBefore","disableAfter","disabledDates","isBeforeDisabled","isAfterDisabled","isDisabledDate","Array","disabled","onChange","e","checked","type","CheckCalendar","state","loading","currentDate","checkedRanges","_handlePrevious","setTimeout","_handleNext","_handleChange","checkedDates","newChecked","foundIndex","c","i","dates","moments","render","this","max","min","leftButton","rightButton","containerClassName","tableClassName","headerClassName","contentClassName","clonedStart","getArrayDates","onClick","ref","key","current","row","day","useState","sections","setSections","useEffect","found","from","document","getElementsByTagName","length","onSelect","selection","window","hash","map","section","id","Item","scrollIntoView","behavior","toUpperCase","substr","split","join","Code","children","file","language","text","setText","src","target","style","display","nord","Installation","Introduction","Basic","cols","title","dataIndex","maxWidth","dateMomentString","dateOrMoment","data","name","required","default","description","Parameters","dataSource","columns","pagination","Content","App","Header","Nav","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2ad2d34c.chunk.js","sourcesContent":["import * as React from 'react';\n\ninterface Props {\n}\n\nconst Left: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M34.52 239.03L228.87 44.69c9.37-9.37 24.57-9.37 33.94 0l22.67 22.67c9.36 9.36 9.37 24.52.04 33.9L131.49\n      256l154.02 154.75c9.34 9.38 9.32 24.54-.04 33.9l-22.67 22.67c-9.37 9.37-24.57 9.37-33.94 0L34.52 272.97c-\n      9.37-9.37-9.37-24.57 0-33.94z\"\n    />\n  </svg>\n);\n\nexport default Left;\n","import * as React from 'react';\n\ninterface Props {\n}\n\nconst Right: React.FC<Props> = () => (\n  <svg\n    height={30}\n    viewBox=\"0 0 320 512\"\n  >\n    <path\n      d=\"M285.476 272.971L91.132 467.314c-9.373 9.373-24.569 9.373-33.941 0l-22.667-22.667c-9.357-9.357-9.375-24.522\n      -.04-33.901L188.505 256 34.484 101.255c-9.335-9.379-9.317-24.544.04-33.901l22.667-22.667c9.373-9.373 24.569-9.373\n       33.941 0L285.475 239.03c9.373 9.372 9.373 24.568.001 33.941z\"\n    />\n  </svg>\n);\n\nexport default Right;\n","import {CheckCalendarContext, CheckCalendarProps, DatesFormats} from \"./types\";\r\n\r\nexport const defaultProps: CheckCalendarProps = {\r\n  startWeekDay: 1,\r\n  locale: 'en',\r\n  hoursIntervals: [\r\n    { start: 8, end: 10 },\r\n    { start: 10, end: 12 },\r\n    { start: 13, end: 15 },\r\n    { start: 15, end: 17 }\r\n  ],\r\n  hideDays: [0, 6]\r\n};\r\n\r\nexport const defaultContext: CheckCalendarContext = {\r\n  props: defaultProps\r\n};\r\n\r\nexport const defaultDatesFormats: DatesFormats = {\r\n  fromHour: '[from] [<strong>]h:mm[</strong>][<small>]a[</small>]',\r\n  toHour: ' [to] [<strong>]h:mm[</strong>][<small>]a[</small>]'\r\n};\r\n","import * as React from 'react';\nimport { CheckCalendarContext } from \"./types\";\nimport {defaultContext} from \"./defaults\";\n\nconst CheckContext = React.createContext<CheckCalendarContext>(defaultContext);\nexport const CheckContextProvider = CheckContext.Provider;\nexport default CheckContext;\n","import moment from 'moment';\r\nimport {CheckCalendarProps, MomentOrDateRange, MomentRange} from \"./types\";\r\nimport { defaultDatesFormats } from \"./defaults\";\r\n\r\nexport const getMomentFromNumber = (date: moment.Moment, value: number) => {\r\n  const trunced =  Math.trunc(value);\r\n  return date.clone()\r\n    .set('hour', trunced)\r\n    .set('minutes', (value - trunced) * 60)\r\n    .set('second', 0)\r\n    .set('millisecond', 0);\r\n};\r\n\r\nexport const getDatesFormats = (props: CheckCalendarProps) =>\r\n  ({ ...defaultDatesFormats, ...props.datesFormats });\r\n\r\nexport const getArrayDates = (start: moment.Moment, count: number) => {\r\n  const dates = []\r\n\r\n  const clonedStart = start.clone().set('hour', 0).set('minute', 0).set('second', 0).set('millisecond', 0);\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    dates.push(clonedStart.clone().add(i, 'day'));\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const isInInterval = (interval1: MomentOrDateRange, interval2: MomentOrDateRange) => {\r\n  const { start, end } = getMomentsFromRange(interval1);\r\n  const { start: start2, end: end2 } = getMomentsFromRange(interval2);\r\n\r\n  return start.isSame(start2, \"minute\") ||\r\n    end.isSame(end2, \"minute\") ||\r\n    start.isBetween(start2, end2, 'minutes', '()') ||\r\n    end.isBetween(start2, end2, 'minutes', '()');\r\n}\r\n\r\nexport const getMomentsFromRange = (interval: MomentOrDateRange): MomentRange => ({\r\n  start: getMomentFromDate(interval.start),\r\n  end: getMomentFromDate(interval.end)\r\n})\r\n\r\nexport const getMomentFromDate = (date: Date | moment.Moment | string) =>\r\n  date instanceof moment ? date as moment.Moment : moment(date);\r\n","import * as React from 'react';\r\nimport {HourInterval} from \"./types\";\r\nimport {getDatesFormats, getMomentFromNumber} from \"./helpers\";\r\nimport HTMLParser from \"html-react-parser\";\r\nimport CheckContext from \"./context\";\r\nimport moment from \"moment\";\r\nimport classNames from \"classnames\";\r\n\r\ninterface Props {\r\n  interval: HourInterval;\r\n}\r\n\r\nconst RowHeader: React.FC<Props> = ({ interval }) => {\r\n  const { props } = React.useContext(CheckContext);\r\n  const { start, end } = interval;\r\n  const { fromHour, toHour } = getDatesFormats(props);\r\n\r\n  if (props.renderRowHeader) {\r\n    return props.renderRowHeader(interval);\r\n  }\r\n\r\n  return (\r\n      <td className={classNames('check-calendar__row-header', props.headerRowClassName)}>\r\n        <div className=\"check-calendar__hour\">\r\n          {start && HTMLParser(`<span>${\r\n            getMomentFromNumber(moment(), start).format(fromHour)\r\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''}</span>`)}\r\n          {end && HTMLParser(`<span>${\r\n            getMomentFromNumber(moment(), end).format(toHour)\r\n              .replace(fromHour.charAt(fromHour.indexOf('mm') - 1) + '00', '') || ''\r\n          }</span>`)}\r\n        </div>\r\n      </td>\r\n  )\r\n}\r\n\r\nexport default RowHeader;\r\n","import * as React from 'react';\r\nimport Moment from \"react-moment\";\r\nimport * as moment from \"moment\";\r\nimport CheckContext from \"./context\";\r\n\r\ninterface Props {\r\n  date: moment.Moment;\r\n}\r\n\r\nconst ColumnDate: React.FC<Props> = ({ date }) => {\r\n  const { props } = React.useContext(CheckContext);\r\n\r\n  if (props.renderColumnHeader) {\r\n    return props.renderColumnHeader(date);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Moment\r\n          className=\"check-calendar_day\"\r\n          locale={props?.locale}\r\n          format=\"ddd\"\r\n        >\r\n          {date}\r\n        </Moment>\r\n      </div>\r\n      <div>\r\n        <Moment\r\n          className=\"check-calendar__day-number\"\r\n          locale=\"fr\"\r\n          format=\"DD\"\r\n        >\r\n          {date}\r\n        </Moment>\r\n      </div>\r\n      <div>\r\n        <Moment\r\n          className=\"check-calendar__month\"\r\n          locale=\"fr\"\r\n          format=\"MMM\"\r\n        >\r\n          {date}\r\n        </Moment>\r\n      </div>\r\n      <div\r\n        // class=\"d-optionDetails\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColumnDate;\r\n","import * as React from 'react';\r\nimport './checkbox.css';\r\nimport classNames from 'classnames';\r\nimport {MomentRange} from \"../types\";\r\nimport {getMomentFromDate} from \"../helpers\";\r\nimport CheckContext from \"../context\";\r\n\r\nexport type CheckBoxChangeHandler = (value: boolean, props: Props) => void;\r\ntype CheckboxProps = {\r\n  ref?: any;\r\n  onChange: CheckBoxChangeHandler;\r\n  interval: MomentRange;\r\n}\r\n\r\ntype InputProps = Omit<React.InputHTMLAttributes<HTMLInputElement>, 'onChange'>;\r\ntype Props = CheckboxProps & InputProps;\r\n\r\nconst Checkbox: React.FC<Props> = ({interval, ...props}) => {\r\n  const {props: { disableBefore, disableAfter, disabledDates } } = React.useContext(CheckContext);\r\n\r\n  const _handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.checked;\r\n    props.onChange(value, {...props, checked: value, value: value ? 0 : 1, interval })\r\n  };\r\n\r\n  const isBeforeDisabled = disableBefore ? interval.end.isBefore(getMomentFromDate(disableBefore)) : false;\r\n  const isAfterDisabled = disableAfter ? interval.start.isAfter(getMomentFromDate(disableAfter)) : false;\r\n  const isDisabledDate = Array.isArray(disabledDates)\r\n    ? disabledDates.some(d => getMomentFromDate(d).isBetween(interval.start, interval.end))\r\n    : false;\r\n\r\n  const disabled = props.disabled || isBeforeDisabled || isAfterDisabled || isDisabledDate;\r\n  return (\r\n    <label className={classNames('check-calendar-checkbox__wrapper', { disabled }, props.className)}>\r\n      <span className=\"check-calendar-checkbox\">\r\n        <input\r\n          {...props}\r\n          onChange={_handleChange}\r\n          className={classNames('check-calendar-checkbox__input')}\r\n          type=\"checkbox\"\r\n          disabled={disabled}\r\n        />\r\n      <span className=\"check-calendar-checkbox__inner\" />\r\n    </span>\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Checkbox;\r\n","import * as React from 'react';\r\nimport {CheckCalendarProps, CheckCalendarState, MomentRange} from \"./types\";\r\nimport LeftIcon from \"./Left\";\r\nimport RightIcon from \"./Right\";\r\nimport classNames from \"classnames\";\r\nimport { defaultProps } from \"./defaults\";\r\nimport { CheckContextProvider } from \"./context\";\r\nimport RowHeader from \"./RowHeader\";\r\nimport moment from \"moment\";\r\nimport ColumnDate from \"./ColumnDate\";\r\nimport {getArrayDates, getMomentFromNumber, getMomentsFromRange, isInInterval} from \"./helpers\";\r\nimport Checkbox, {CheckBoxChangeHandler} from \"./CheckBox\";\r\n\r\nimport './styles.css';\r\n\r\nclass CheckCalendar extends React.Component<CheckCalendarProps, CheckCalendarState> {\r\n  static defaultProps = defaultProps;\r\n\r\n  state = {\r\n    loading: false,\r\n    currentDate: moment(this.props.start).set('day', this.props.startWeekDay || 1),\r\n    checkedRanges: []\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      hoursIntervals,\r\n      hideDays,\r\n      max,\r\n      min,\r\n      checkedDates,\r\n      leftButton,\r\n      rightButton,\r\n      containerClassName,\r\n      tableClassName,\r\n      headerClassName,\r\n      contentClassName\r\n    } = this.props;\r\n\r\n    const { loading, currentDate, checkedRanges } = this.state;\r\n    const dates = getArrayDates(currentDate, 7);\r\n    const checked = Array.isArray(checkedDates) ? checkedDates : checkedRanges;\r\n\r\n    return (\r\n      <CheckContextProvider value={{ props: this.props }}>\r\n        <div className={classNames('check-calendar', containerClassName)}>\r\n          <button\r\n            className={classNames('check-calendar__button check-calendar__prev', leftButton?.className)}\r\n            disabled={!!min && dates[0].clone().subtract(1, 'day').isBefore(moment(min))}\r\n            onClick={this._handlePrevious}\r\n          >\r\n            {leftButton?.content || <LeftIcon/>}\r\n          </button>\r\n          <button\r\n            className={classNames('check-calendar__button check-calendar__next', rightButton?.className)}\r\n            disabled={!!max && dates[dates.length - 1].clone().add(1, 'day').isAfter(moment(max))}\r\n            onClick={this._handleNext}\r\n          >\r\n            {rightButton?.content || <RightIcon/>}\r\n          </button>\r\n          <div\r\n            className={classNames('check-calendar__container', {'check-calendar__container--hide': loading})}\r\n            ref=\"calendar\"\r\n          >\r\n            <table className={classNames('check-calendar__table', tableClassName)}>\r\n              <thead/>\r\n              <tbody>\r\n              <tr className=\"check-calendar__header\">\r\n                <td\r\n                  className={classNames(headerClassName)}\r\n                />\r\n                {dates.map((current) => {\r\n                    return (\r\n                      <td\r\n                        key={current.format('YYYY_MM_DD')}\r\n                        className={classNames(headerClassName, { 'check-calendar__hidden': hideDays?.includes(current.day()) })}\r\n                      >\r\n                        <ColumnDate date={current} />\r\n                      </td>\r\n                    );\r\n                  })}\r\n              </tr>\r\n              {hoursIntervals && hoursIntervals.map((row) => (\r\n                <tr key={`${row.start}_${row.end}`}>\r\n                  <RowHeader interval={row} />\r\n                  {dates.map(day => {\r\n                    const interval = {\r\n                      start: getMomentFromNumber(day, row.start),\r\n                      end: getMomentFromNumber(day, row.end)\r\n                    };\r\n\r\n                    return (\r\n                      <td\r\n                        key={`${day.format('YYYY_MM_DD')}_${row.start}_${row.end}`}\r\n                        className={classNames(contentClassName, { 'check-calendar__hidden': hideDays?.includes(day.day()) })}\r\n                      >\r\n                        <Checkbox\r\n                          interval={interval}\r\n                          onChange={this._handleChange}\r\n                          checked={!!(checked).find(c => isInInterval(c, interval))}\r\n                          value=\"off\"\r\n                        />\r\n                      </td>\r\n                    )\r\n                  })}\r\n                </tr>\r\n              ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </CheckContextProvider>\r\n    );\r\n  }\r\n\r\n  _handlePrevious = () => {\r\n    this.setState({ loading:true });\r\n    setTimeout(() => {\r\n      this.setState({\r\n        loading:false,\r\n        currentDate: this.state.currentDate.clone().subtract(7, 'days')\r\n      }, this.props.onPreviousClick);\r\n\r\n    }, 400);\r\n\r\n  };\r\n\r\n  _handleNext = () => {\r\n    this.setState({ loading: true });\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        loading: false,\r\n        currentDate: this.state.currentDate.clone().add(7, 'days')\r\n      }, this.props.onNextClick);\r\n    }, 400);\r\n  };\r\n\r\n  _handleChange: CheckBoxChangeHandler = ( value, props) => {\r\n    const { checkedRanges } = this.state;\r\n    const { interval } = props;\r\n    const { onChange, checkedDates } = this.props;\r\n    let newChecked = [...Array.isArray(checkedDates) ? checkedDates : checkedRanges];\r\n    if (value) {\r\n      newChecked.push(interval);\r\n    } else {\r\n\r\n      const foundIndex = newChecked.findIndex((c) => isInInterval(c, interval));\r\n\r\n      if (foundIndex > -1) {\r\n        newChecked.splice(foundIndex, 1);\r\n      }\r\n    }\r\n\r\n    newChecked = newChecked.map(i => getMomentsFromRange(i));\r\n\r\n    if (onChange) {\r\n\r\n      onChange({\r\n        dates: (newChecked as MomentRange[]).map(i => ({ start: i.start.toDate(), end: i.end.toDate() })) ,\r\n        moments: newChecked as MomentRange[]\r\n      });\r\n\r\n    }\r\n\r\n    if (!Array.isArray(checkedDates)) {\r\n      this.setState({ checkedRanges: newChecked as MomentRange[] });\r\n    }\r\n  };\r\n\r\n}\r\n\r\nexport {\r\n  CheckCalendar,\r\n  CheckCalendarProps,\r\n  defaultProps,\r\n  LeftIcon,\r\n  RightIcon\r\n};\r\n","import React from 'react';\n\nimport './header.css';\nimport { CheckCalendar } from 'react-check-calendar';\n\nexport default () => (\n  <header>\n    <h1>React check calendar</h1>\n    <div>\n      <CheckCalendar\n        leftButton={{ className: 'white' }}\n        rightButton={{ className: 'white'}}\n      />\n    </div>\n  </header>\n);\n","import React from 'react';\nimport { Menu } from 'antd';\n\nexport default () => {\n  const [sections, setSections] = React.useState([]);\n  React.useEffect(() => {\n    const found = Array.from(document.getElementsByTagName('section'));\n    if (found.length !== sections.length) {\n      setSections(found);\n    }\n  })\n\n  return (\n    <nav>\n      <Menu onSelect={(selection) => window.hash = `#${selection.key}`}>\n        {sections.map(section => {\n          if (!section.id) {\n            return null;\n          }\n\n          return (\n            <Menu.Item\n              key={section.id}\n              onClick={() => section.scrollIntoView({ behavior: 'smooth' })}\n            >\n              {section.id && section.id[0].toUpperCase() + section.id.substr(1).split('-').join(' ')}\n            </Menu.Item>\n          )\n        })}\n      </Menu>\n    </nav>\n  );\n}\n","import SyntaxHighlighter  from 'react-syntax-highlighter';\nimport { nord } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport React from 'react';\n\nconst Code = ({ children, file, language }) => {\n  const [text, setText] = React.useState(children);\n\n  return (\n    <div>\n    {file && <input type=\"file\" src={file} onChange={(e) => setText(e.target.value)} style={{ display: 'none' }} />}\n      <SyntaxHighlighter language={language || 'jsx'} style={nord}>\n        {text}\n      </SyntaxHighlighter>\n    </div>\n  );\n}\n\n\n\nexport default Code;\n","import React from 'react';\nimport Code from '../Code';\n\nconst Installation = () => (\n  <section id=\"installation\">\n    <h2>Installation</h2>\n    <h3>Npm</h3>\n    <Code language=\"npm\">npm install react-check-calendar --save</Code>\n    <h3>Yarn</h3>\n    <Code language=\"npm\">yarn add react-check-calendar</Code>\n  </section>\n);\n\nexport default Installation;\n","import React from 'react';\n\nconst Introduction = () => (\n  <section id=\"introduction\">\n    <h2>Introduction</h2>\n    <p>\n      Configurable and customisable week calendar with checkboxes for <code>React</code>.\n    </p>\n  </section>\n);\n\nexport default Introduction;\n","import React from 'react';\nimport { CheckCalendar } from 'react-check-calendar';\nimport Code from '../Code';\n\nconst basic = `\nimport React from 'react';\nimport 'react-check-calendar/dist/index.css';\n\nconst Basic = () => (\n   <CheckCalendar />\n);\n`;\n\nconst Basic = () => (\n  <section id=\"basic-example\">\n    <h2>Basic Example</h2>\n    <div className=\"example-container\">\n      <div>\n        <CheckCalendar />\n      </div>\n      <div>\n        <Code>\n          { basic }\n        </Code>\n      </div>\n    </div>\n  </section>\n);\n\nexport default Basic;\n","import React from 'react';\nimport { Table } from 'antd'\nimport 'antd/dist/antd.css'\n\nconst cols = [\n  { title: 'Parameter name', key: 'name', dataIndex: 'name', maxWidth: 150 },\n  { title: 'Type', key: 'type', dataIndex: 'type' },\n  { title: 'Default', key: 'default', dataIndex: 'default' },\n  { title: 'Description', key: 'description', dataIndex: 'description' },\n  /*{ title: 'Required', key: 'required', dataIndex: 'required',\n    render: (required) => (\n      <Checkbox checked={required} disabled={!required} />\n    )},*/\n]\n\nconst dateOrMoment = 'Date | Moment';\nconst dateMomentString = dateOrMoment + ' | string';\nconst data = [\n  { name: 'start', required: false, type: dateMomentString, default: 'Date.now()', description: 'start date' },\n  { name: 'startWeekDay', required: false, type: 'number', default: '1', description: 'first calendar column day, 1 = monday' },\n  { name: 'locale', required: false, type: 'string', default: 'en', description: 'moment locale' },\n  { name: 'max', required: false, type: dateMomentString, default: '', description: 'max calendar limit, disable next button after this date' },\n  { name: 'min', required: false, type: dateMomentString, default: '', description: 'min calendar limit, disable prev button before this date' },\n  { name: 'disableBefore', required: false, type: dateMomentString, default: '', description: 'disable checkboxes before this date' },\n  { name: 'disableAfter', required: false, type: dateMomentString, default: '', description: 'disable checkboxes after this date' },\n  { name: 'disabledDates', required: false, type: `[${dateMomentString}]`, default: '[]', description: 'list of disabled checkboxes dates' },\n  {\n    name: 'checkedDates',\n    required: false,\n    type: `\n[{\n    start: ${dateOrMoment},\n    end: ${dateOrMoment}\n}]\n`,\n    default: '',\n    description: 'list of checked checkboxes'\n  },\n  {\n    name: 'hoursIntervals',\n    required: false,\n    type: `\n[{\n    start: number,\n    end: number\n}]\n`,\n    default: (<div>\n      <div>[{`{ start: 8, end: 10 },`}</div>\n      <div>{`{ start: 10, end: 12 },`}</div>\n      <div>{`{ start: 13, end: 15 },`}</div>\n      <div>{`{ start: 15, end: 17 }`}]</div>\n    </div>),\n    description: <div>list of rows, decimals will be converted <br/> 12.25 => 12:15 (12 + 0.25 * 60)</div>\n  },\n  {\n    name: 'datesFormats',\n    required: false,\n    type: '{ fromHour?: string, toHour?: string }',\n    default: (<div>\n      {'{'}<br />\n      {`fromHour: '[from] [<strong>]h:mm[</strong>][<small>]a[</small>]'`},<br />\n      {`toHour: ' [to] [<strong>]h:mm[</strong>][<small>]a[</small>]'`} <br />\n    }\n    </div>),\n    description: 'intervals dates format, accepted by moment'\n  },\n  { name: 'hideDays', required: false, type: '[number]', default: '[0, 6]', description: 'hide colums, default [sunday, saturday]' },\n  { name: 'onChange', required: false, type: `({ moments: [{ start: Moment, end: Moment}] , dates: [[ start: Date, end: Date}] }) => void`, default: '', description: 'callback on checkbox click, with list of checked dates' },\n  { name: 'onNextClick', required: false, type: '() => void', default: '', description: 'next button click callback, after calendar appear' },\n  { name: 'onPreviousClick', required: false, type: '() => void', default: 'en', description: 'prev button click callbakc, after calendar appear' },\n  { name: 'leftButton', required: false, type: '{ content?: ReactNode, className?: string }', default: '{ content: < }', description: 'prev button props' },\n  { name: 'leftButton', required: false, type: '{ content?: ReactNode, className?: string }', default: '{ content: > }', description: 'next button props' },\n  { name: 'containerClassName', required: false, type: 'string', default: '', description: 'container additional class' },\n  { name: 'tableClassName', required: false, type: 'string', default: '', description: 'table additional class' },\n  { name: 'headerClassName', required: false, type: 'string', default: '', description: 'table header additional class' },\n  { name: 'contentClassName', required: false, type: 'string', default: '', description: 'table content additional class' },\n  { name: 'headerRowClassName', required: false, type: 'string', default: '', description: 'row interval additional class' },\n  { name: 'renderColumnHeader', required: false, type: '(date: Moment) => ReactElement', default: '', description: 'callback to render column header' },\n  { name: 'renderRowHeader', required: false, type: '(date: Moment) => ReactElement', default: '', description: 'callback to render intervals' },\n]\n\nconst Parameters = () => (\n  <section id=\"parameters\">\n    <h2>Parameters</h2>\n    <Table dataSource={data} columns={cols} pagination={false} />\n  </section>\n);\n\nexport default Parameters;\n","import React from 'react';\n\nimport Installation from './installation';\nimport Introduction from './introduction';\nimport Basic from './basic';\nimport Parameters from './parameters';\n\nconst Content = () => {\n  return (\n    <main>\n      <Introduction />\n      <Installation />\n      <Basic />\n      <Parameters />\n    </main>\n  );\n};\n\nexport default Content;\n","import React from 'react'\nimport 'react-check-calendar/dist/index.css';\nimport Header from './Header';\nimport Nav from './Nav';\nimport Content from './Content';\nimport { BackTop } from 'antd';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Nav />\n        <Content />\n      </div>\n      <BackTop />\n    </div>\n  )\n};\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}